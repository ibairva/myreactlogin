{"version":3,"sources":["components/navbar.js","components/signin.js","components/signup.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","style","textDecoration","initialState","username","password","usernameError","passwordError","Signin","props","handleChange","event","console","log","target","setState","name","value","validate","list2","localStorage","getItem","filtered","JSON","parse","filter","n","state","length","alert","handleSubmit","preventDefault","onSubmit","this","htmlFor","type","placeholder","onChange","fontSize","color","React","Component","email","confirmpw","nameError","emailError","confirmpwError","list","Signup","includes","isValid","push","setItem","stringify","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.15e0c332.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul>\r\n        <div className=\"nav-signin\">\r\n          <li className=\"li-signin\">\r\n            <div className=\"nav-tag\">\r\n              <Link to=\"/signin\" style={{ textDecoration: \"none\" }}>\r\n                Sign In\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </div>\r\n        <div className=\"nav-signup\">\r\n          <li className=\"li-signup\">\r\n            <div className=\"nav-tag\">\r\n              <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n                Sign Up\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </div>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./signin.css\";\r\n\r\nlet initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n  usernameError: \"\",\r\n  passwordError: \"\",\r\n};\r\n\r\nexport default class Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.target);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let usernameError = \"\";\r\n    let passwordError = \"\";\r\n    // let passwordError = \"\";\r\n    let list2 = localStorage.getItem(\"userData\");\r\n    list2 = JSON.parse(list2);\r\n\r\n    const filtered = list2.filter((n) => n.username == this.state.username);\r\n    console.log(filtered);\r\n\r\n    if (this.state.username && filtered.length == 0) {\r\n      alert(\"You are not registered. Please Sign Up\");\r\n    } else {\r\n      if (!this.state.username) {\r\n        usernameError = \"Username cannot be blank\";\r\n      }\r\n\r\n      if (!this.state.password) {\r\n        passwordError = \"Password cannot be blank\";\r\n      }\r\n\r\n      if (usernameError || passwordError) {\r\n        this.setState({ usernameError, passwordError });\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    console.log(this.state);\r\n    event.preventDefault();\r\n    const isValid = this.validate();\r\n\r\n    if (isValid) {\r\n      alert(\"Login Successful\");\r\n      // clear form\r\n      this.setState(initialState);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"signin-container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"signin-header\">Sign In</div>\r\n          <div className=\"content\">\r\n            <div className=\"form\">\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Enter username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 12, color: \"#ea0101\" }}>\r\n                  {this.state.usernameError}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 12, color: \"#ea0101\" }}>\r\n                  {this.state.passwordError}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button type=\"submit\" className=\"signin-btn\">\r\n              Sign In\r\n            </button>\r\n            <div className=\"reg-query\">\r\n              <p>Doesn't have an account?</p>\r\n              <Link to=\"/signup\">\r\n                <button className=\"signupDirect\">Sign Up here</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./signup.css\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  password: \"\",\r\n  confirmpw: \"\",\r\n  nameError: \"\",\r\n  emailError: \"\",\r\n  usernameError: \"\",\r\n  passwordError: \"\",\r\n  confirmpwError: \"\",\r\n};\r\n\r\nlet list = [];\r\n\r\nexport default class Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let nameError = \"\";\r\n    let emailError = \"\";\r\n    let usernameError = \"\";\r\n    let passwordError = \"\";\r\n    let confirmpwError = \"\";\r\n\r\n    let list2 = localStorage.getItem(\"userData\");\r\n    list2 = JSON.parse(list2);\r\n\r\n    const filtered = list2.filter((n) => n.username == this.state.username);\r\n    console.log(filtered);\r\n\r\n    if (filtered.length == 1) {\r\n      alert(\"This username is already registered\");\r\n    } else {\r\n      if (!this.state.name) {\r\n        nameError = \"Name cannot be blank\";\r\n      }\r\n\r\n      if (!this.state.email) {\r\n        emailError = \"Email cannot be blank\";\r\n      }\r\n\r\n      if (!this.state.email.includes(\"@\")) {\r\n        emailError = \"Invalid email\";\r\n      }\r\n\r\n      if (!this.state.username) {\r\n        usernameError = \"Username cannot be blank\";\r\n      }\r\n\r\n      if (!this.state.password) {\r\n        passwordError = \"Password cannot be blank\";\r\n      }\r\n\r\n      if (this.state.password.length < 6) {\r\n        passwordError = \"Password should be of minimum 6 characters\";\r\n      }\r\n\r\n      if (this.state.confirmpw !== this.state.password) {\r\n        confirmpwError = \"Password doesn't match\";\r\n      }\r\n\r\n      if (\r\n        emailError ||\r\n        nameError ||\r\n        usernameError ||\r\n        passwordError ||\r\n        confirmpwError\r\n      ) {\r\n        this.setState({\r\n          emailError,\r\n          nameError,\r\n          usernameError,\r\n          passwordError,\r\n          confirmpwError,\r\n        });\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const isValid = this.validate();\r\n    console.log(this.state);\r\n    if (isValid) {\r\n      alert(\"SignUp Successful. You can now Sign In \");\r\n      // clear form\r\n      this.setState(initialState);\r\n      list.push(this.state);\r\n      localStorage.setItem(\"userData\", JSON.stringify(list));\r\n      console.log(localStorage);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"signup-container\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"signup-header\">Create Account</div>\r\n          <div className=\"content\">\r\n            <div className=\"form\">\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 11, color: \"#ea0101\" }}>\r\n                  {this.state.nameError}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter your email id\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 11, color: \"#ea0101\" }}>\r\n                  {this.state.emailError}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"company\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Choose a username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 11, color: \"#ea0101\" }}>\r\n                  {this.state.usernameError}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Enter a password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 11, color: \"#ea0101\" }}>\r\n                  {this.state.passwordError}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-item\">\r\n                <label htmlFor=\"confirmpw\">Confirm Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confirmpw\"\r\n                  placeholder=\"Confirm your password\"\r\n                  value={this.state.confirmpw}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <div style={{ fontSize: 11, color: \"#ea0101\" }}>\r\n                  {this.state.confirmpwError}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button type=\"submit\" className=\"signup-btn\">\r\n              Create Account\r\n            </button>\r\n            <div className=\"account-query\">\r\n              <p>Already have an account?</p>\r\n              <Link to=\"/signin\">\r\n                <button className=\"signinDirect\">Sign In here</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Signin from \"./components/signin\";\nimport Signup from \"./components/signup\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router exact path=\"/myreactlogin\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/myreactlogin\" exact component={Signin} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/signup\" component={Signup} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}